/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a systemifapps_adaptor.h: ../../../native/HOME_App/IPC/systemifapps.xml
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SYSTEMIFAPPS_ADAPTOR_H
#define SYSTEMIFAPPS_ADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include <QtCore/qcontainerfwd.h>
#include "SysUI.h"

/*
 * Adaptor class for interface hmi.service.sysifapps
 */
class SysifappsAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "hmi.service.sysifapps")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"hmi.service.sysifapps\">\n"
"    <property access=\"readwrite\" type=\"s\" name=\"appID\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"layoutType\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"appIdTiel\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"childAppActive\"/>\n"
"    <property access=\"readwrite\" type=\"av\" name=\"defaultLayout\"/>\n"
"    <property access=\"readwrite\" type=\"av\" name=\"defaultApps\"/>\n"
"    <property access=\"readwrite\" type=\"av\" name=\"defaultBarApps\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"showTestApp\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"currentApplication\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"currentMediaType\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"cameraIsOn\"/>\n"
"    <property access=\"readwrite\" type=\"i\" name=\"currentMeterType\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"currentScreenPath\"/>\n"
"    <property access=\"readwrite\" type=\"s\" name=\"currentPopupPath\"/>\n"
"    <property access=\"readwrite\" type=\"b\" name=\"showUSBheader\"/>\n"
"    <property access=\"read\" type=\"as\" name=\"SERVICE_SURFACE\"/>\n"
"    <signal name=\"fullScreenDriverRecorder\"/>\n"
"    <signal name=\"popupRequestShowSignal\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"isShow\"/>\n"
"    </signal>\n"
"    <signal name=\"expandScreen\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"signalChangeScreenSize\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"Appid\"/>\n"
"    </signal>\n"
"    <signal name=\"appIDChanged\"/>\n"
"    <signal name=\"signalGetSettingTielType\"/>\n"
"    <signal name=\"layoutTypeChanged\"/>\n"
"    <signal name=\"propagatePosition\">\n"
"      <arg direction=\"out\" type=\"d\" name=\"x\"/>\n"
"      <arg direction=\"out\" type=\"d\" name=\"y\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"doubleClick\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"onlyAcceptRelease\"/>\n"
"    </signal>\n"
"    <signal name=\"appIdTielChanged\"/>\n"
"    <signal name=\"signalSettingAppIdTile\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appIdTiel\"/>\n"
"    </signal>\n"
"    <signal name=\"signalGetSettingTileAppId\"/>\n"
"    <signal name=\"childAppActiveChanged\"/>\n"
"    <signal name=\"writeNewSettingInfo\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"first\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"second\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"third\"/>\n"
"    </signal>\n"
"    <signal name=\"defaultLayoutChanged\"/>\n"
"    <signal name=\"defaultAppsChanged\"/>\n"
"    <signal name=\"defaultBarAppsChanged\"/>\n"
"    <signal name=\"writeNewDefaultBarApps\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"first\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"second\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"third\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"fourth\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"fifth\"/>\n"
"    </signal>\n"
"    <signal name=\"fullExpandChanged\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"isFullExpand\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"screenType\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"changeSate\"/>\n"
"    </signal>\n"
"    <signal name=\"showTestAppChanged\"/>\n"
"    <signal name=\"showInteralPopup\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"isShowPopup\"/>\n"
"    </signal>\n"
"    <signal name=\"showTopScreenOnApps\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"isShowTop\"/>\n"
"    </signal>\n"
"    <signal name=\"mediaTypeChanged\"/>\n"
"    <signal name=\"callHDMIForHeader\"/>\n"
"    <signal name=\"callCommunicateSettingForHeader\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"typeOfScreen\"/>\n"
"    </signal>\n"
"    <signal name=\"callCameraForHeader\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"callScreensOfAGivenApp\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appID\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"screenNums\"/>\n"
"    </signal>\n"
"    <signal name=\"sendAppIdToHeader\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"    </signal>\n"
"    <signal name=\"signalEnableMultitouchSettingScreen\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"isEnable\"/>\n"
"    </signal>\n"
"    <signal name=\"signalReturnToTopScreen\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appID\"/>\n"
"    </signal>\n"
"    <signal name=\"addFavoriteToSystem\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"eventId\"/>\n"
"    </signal>\n"
"    <signal name=\"signallingDataThroughSys\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"v\" name=\"var\"/>\n"
"    </signal>\n"
"    <signal name=\"signallingDataThroughSysOverflowText\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appName\"/>\n"
"      <arg direction=\"out\" type=\"b\" name=\"isActive\"/>\n"
"    </signal>\n"
"    <signal name=\"signallingDataThroughSysRequestShowApp\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appName\"/>\n"
"    </signal>\n"
"    <signal name=\"callScreensOfPhoneApp\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appID\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"screenNums\"/>\n"
"    </signal>\n"
"    <signal name=\"backToHome\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"previousScreen\"/>\n"
"    </signal>\n"
"      <arg direction=\"out\" type=\"b\" name=\"deactive\"/>\n"
"    </signal>\n"
"    <signal name=\"backToPrevious\"/>\n"
"    <signal name=\"calledBackToPrevious\"/>\n"
"    <signal name=\"notifyReplyResultPopup\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"title\"/>\n"
"      <arg direction=\"out\" type=\"v\" name=\"data\"/>\n"
"    </signal>\n"
"    <signal name=\"disableWaitingScreen\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </signal>\n"
"    <signal name=\"usbInformation\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"signalErrorCodeForTest\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"errorCode\"/>\n"
"    </signal>\n"
"    <signal name=\"signallingDataThroughApp\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"v\" name=\"var\"/>\n"
"    </signal>\n"
"    <signal name=\"signalCloseScreenAndroidAuto\"/>\n"
"    <signal name=\"onSetVolumeMinus\"/>\n"
"    <signal name=\"onDriverRecord\"/>\n"
"    <signal name=\"onDriverPicture\"/>\n"
"    <signal name=\"onSetVolumePlus\"/>\n"
"    <signal name=\"onSetVolumeMute\"/>\n"
"    <signal name=\"currentMediaTypeChanged\"/>\n"
"    <signal name=\"cameraIsOnChanged\"/>\n"
"    <signal name=\"onCameraSurfaceIsRunningChanged\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </signal>\n"
"    <signal name=\"receivedUpdateScreenNotification\"/>\n"
"    <signal name=\"currentMeterTypeChanged\"/>\n"
"    <signal name=\"currentApplicationChanged\"/>\n"
"    <signal name=\"currentScreenPathChanged\"/>\n"
"    <signal name=\"currentPopupPathChanged\"/>\n"
"    <signal name=\"showUSBheaderChanged\"/>\n"
"    <signal name=\"keyEvent\">\n"
"      <arg direction=\"out\" type=\"q\" name=\"key\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"event\"/>\n"
"    </signal>\n"
"    <signal name=\"sigWheelEvent\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"code\"/>\n"
"    </signal>\n"
"    <signal name=\"signalChangeScreens\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"id\"/>\n"
"    </signal>\n"
"    <signal name=\"onHandleReqCallReceived\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"qstr\"/>\n"
"    </signal>\n"
"    <method name=\"popupRequestShow\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"isShow\"/>\n"
"    </method>\n"
"    <method name=\"requestHideSurface\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getFavoriteFromApps\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"eventId\"/>\n"
"    </method>\n"
"    <method name=\"getPositionToTransfer\">\n"
"      <arg direction=\"in\" type=\"d\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"d\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"dbClick\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"onlyAcceptRelease\"/>\n"
"    </method>\n"
"    <method name=\"getPositionToTransfer\">\n"
"      <arg direction=\"in\" type=\"d\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"d\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"dbClick\"/>\n"
"    </method>\n"
"    <method name=\"getPositionToTransfer\">\n"
"      <arg direction=\"in\" type=\"d\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"d\" name=\"y\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"id\"/>\n"
"    </method>\n"
"    <method name=\"getNewSettingInfo\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"first\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"second\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"third\"/>\n"
"    </method>\n"
"    <method name=\"getNewDefaultBarApps\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"first\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"second\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"third\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"fourth\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"fifth\"/>\n"
"    </method>\n"
"    <method name=\"callOutToExpand\">\n"
        "   <arg type=\"(i)\" direction=\"out\">                                                                        \n"                            
        "   <annotation name=\"org.qtproject.QtDBus.QtTypeName.Out1\" value=\"uicommon::SysUI::TransitionRetCode\">     \n" 
        "   <arg type=\"s\" direction=\"in\">                                                                          \n" 
        "   <arg type=\"s\" direction=\"in\">                                                                          \n"  
        "   <arg type=\"(i)\" direction=\"in\">                                                                        \n"   
        "   <annotation name=\"org.qtproject.QtDBus.QtTypeName.In1\" value=\"uicommon::SysUI::TransitionType\">        \n" 
"    </method>\n"
"    <method name=\"callToExpandMaxsize\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isFullExpand\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"screenType\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"enableHeader\"/>\n"
"    </method>\n"
"    <method name=\"callToExpandMaxsize\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isFullExpand\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"screenType\"/>\n"
"    </method>\n"
"      <arg direction=\"in\" type=\"s\" name=\"action\"/>\n"
"    </method>\n"
"    <method name=\"callToExpandMaxsize\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isFullExpand\"/>\n"
"    </method>\n"
"    <method name=\"callToExpandMaxsize\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"    </method>\n"
"    <method name=\"receiverForMediaType\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"type\"/>\n"
"    </method>\n"
"    <method name=\"callToShowInternalPopup\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isShowPopup\"/>\n"
"    </method>\n"
"    <method name=\"callToShowInternalPopup\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"    </method>\n"
"    <method name=\"callToShowTopScreen\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"isShowTop\"/>\n"
"    </method>\n"
"    <method name=\"callToShowTopScreen\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"    </method>\n"
"    <method name=\"getAppIdForHeader\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"    </method>\n"
"    <method name=\"enableMultitouchSettingScreen\">\n"
"      <arg direction=\"in\" type=\"b\" name=\"isEnable\"/>\n"
"    </method>\n"
"    <method name=\"isLeftDriverPosition\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"receiveAppToCallOut\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appID\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"screenID\"/>\n"
"    </method>\n"
"    <method name=\"receivePhoneApp\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appID\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"screenID\"/>\n"
"    </method>\n"
"    <method name=\"sendDataThroughSys\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"v\" name=\"var\"/>\n"
"    </method>\n"
"    <method name=\"backToPreviousScreen\"/>\n"
"    <method name=\"replyResultPopup\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"title\"/>\n"
"      <arg direction=\"in\" type=\"v\" name=\"data\"/>\n"
"    </method>\n"
"    <method name=\"getDataThroughSys\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"v\" name=\"var\"/>\n"
"    </method>\n"
"    <method name=\"backToHomeScreen\"/>\n"
"    <method name=\"requestToHome\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"deactive\"/>\n"
"    </method>\n"
"    <method name=\"setCloseScreen\"/>\n"
"    <method name=\"gotoAndroidApp\"/>\n"
"    <method name=\"resizeWindowItem\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"SURFACE_ID\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"height\"/>\n"
"    </method>\n"
"    <method name=\"rePositionWindowItem\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"SURFACE_ID\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"x\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"y\"/>\n"
"    </method>\n"
"    <method name=\"rePositionWindownItemback\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"SURFACE_ID\"/>\n"
"    </method>\n"
"    <method name=\"updateScreenSuccesfully\"/>\n"
"    <method name=\"requestShowFullApp\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"showFactorySetting\"/>\n"
"    <method name=\"sendDatatoMedia\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getErrorCodeForTest\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appId\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"errorCode\"/>\n"
"    </method>\n"
"    <method name=\"changeScreenSize\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"Apps\"/>\n"
"    </method>\n"
"    <method name=\"getSettingTileType\"/>\n"
"    <method name=\"settingTileAppId\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appIdTiel\"/>\n"
"    </method>\n"
"    <method name=\"getSettingTileAppId\"/>\n"
"    <method name=\"setlayoutType\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"newLayoutType\"/>\n"
"    </method>\n"
"    <method name=\"setappIdTiel\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"newAppIdTiel\"/>\n"
"    </method>\n"
"    <method name=\"setchildAppActive\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"newChildAppActive\"/>\n"
"    </method>\n"
"    <method name=\"mediaType\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"getAppIDForSignalReturnToTopScreen\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"appID\"/>\n"
"    </method>\n"
"    <method name=\"getCurrentMeterType\"/>\n"
"    <method name=\"checkCurrentScreen\"/>\n"
"    <method name=\"isFullSizeSurfaceViewTheTop\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"getTopMostSurfaceView\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"notifySettingChanged\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"str\"/>\n"
"    </method>\n"
"    <method name=\"getPreviousApplication\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"changeDisplayOnOff\"/>\n"
"    <method name=\"manualDriverRecord\"/>\n"
"    <method name=\"manualDriverPicture\"/>\n"
"    <signal name=\"notifyListMeterChanged\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"listPanelAppsChanged\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <method name=\"collectApp\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <signal name=\"collectAllDataFromApp\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"first\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"second\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"third\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"fourth\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"fifth\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"first_id\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"second_id\"/>\n"
"      <arg direction=\"out\" type=\"s\" name=\"third_id\"/>\n"
"    </signal>\n"
"   <method name=\"requestAACPSurface\">                                                                        \n"
"       <arg name=\"SurfaceType\" type=(i) direction=\"in\">                                                    \n"
"       <annotation name=\"org.qtproject.QtDBus.QtTypeName.In1\" value=\"uicommon::SysUI::ServiceAACP\">        \n"
"       <arg name=\"isShown\" type=\"b\">                                                                       \n"
"       <arg name=\"supportShow\" type=\"b\">                                                                    \n"
"   </method>                                                                                                   \n"
" <signal name=\"transitionStateTrigger\"> \n"
    "   <arg type=\"(i)\" direction=\"out\">                                                                        \n"                            
    "   <annotation name=\"org.qtproject.QtDBus.QtTypeName.Out1\" value=\"uicommon::SysUI::TransitionType\">     \n" 
    "    <arg direction=\"out\" type=\"s\">   \n"
    "    <arg direction=\"out\" type=\"s\">   \n"
    "</signal>                                \n"
"    <signal name=\"signalCheckPreset\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"presetOrder\"/>\n"
"    </signal>\n"
"    <signal name=\"onRequestShowApp\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <method name=\"acknowledgeAppReady\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <signal name=\"onRequestHideApp\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    SysifappsAdaptor(QObject *parent);
    virtual ~SysifappsAdaptor();

public: // PROPERTIES
    Q_PROPERTY(QStringList SERVICE_SURFACE READ sERVICE_SURFACE)
    QStringList sERVICE_SURFACE() const;

    Q_PROPERTY(QString appID READ appID WRITE setAppID)
    QString appID() const;
    void setAppID(const QString &value);

    Q_PROPERTY(QString appIdTiel READ appIdTiel WRITE setAppIdTiel)
    QString appIdTiel() const;
    void setAppIdTiel(const QString &value);

    Q_PROPERTY(bool cameraIsOn READ cameraIsOn WRITE setCameraIsOn)
    bool cameraIsOn() const;
    void setCameraIsOn(bool value);

    Q_PROPERTY(QString childAppActive READ childAppActive WRITE setChildAppActive)
    QString childAppActive() const;
    void setChildAppActive(const QString &value);

    Q_PROPERTY(QString currentApplication READ currentApplication WRITE setCurrentApplication)
    QString currentApplication() const;
    void setCurrentApplication(const QString &value);

    Q_PROPERTY(QString currentMediaType READ currentMediaType WRITE setCurrentMediaType)
    QString currentMediaType() const;
    void setCurrentMediaType(const QString &value);

    Q_PROPERTY(int currentMeterType READ currentMeterType WRITE setCurrentMeterType)
    int currentMeterType() const;
    void setCurrentMeterType(int value);

    Q_PROPERTY(QString currentPopupPath READ currentPopupPath WRITE setCurrentPopupPath)
    QString currentPopupPath() const;
    void setCurrentPopupPath(const QString &value);

    Q_PROPERTY(QString currentScreenPath READ currentScreenPath WRITE setCurrentScreenPath)
    QString currentScreenPath() const;
    void setCurrentScreenPath(const QString &value);

    Q_PROPERTY(QVariantList defaultApps READ defaultApps WRITE setDefaultApps)
    QVariantList defaultApps() const;
    void setDefaultApps(const QVariantList &value);

    Q_PROPERTY(QVariantList defaultBarApps READ defaultBarApps WRITE setDefaultBarApps)
    QVariantList defaultBarApps() const;
    void setDefaultBarApps(const QVariantList &value);

    Q_PROPERTY(QVariantList defaultLayout READ defaultLayout WRITE setDefaultLayout)
    QVariantList defaultLayout() const;
    void setDefaultLayout(const QVariantList &value);

    Q_PROPERTY(int layoutType READ layoutType WRITE setLayoutType)
    int layoutType() const;
    void setLayoutType(int value);

    Q_PROPERTY(bool showTestApp READ showTestApp WRITE setShowTestApp)
    bool showTestApp() const;
    void setShowTestApp(bool value);

    Q_PROPERTY(bool showUSBheader READ showUSBheader WRITE setShowUSBheader)
    bool showUSBheader() const;
    void setShowUSBheader(bool value);

    Q_PROPERTY(bool cameraSurfaceIsRunning READ cameraSurfaceIsRunning WRITE setCameraSurfaceIsRunning)
    bool cameraSurfaceIsRunning() const;
    void setCameraSurfaceIsRunning(bool value);

public Q_SLOTS: // METHODS
    void acknowledgeAppReady(QString);
    void isReady(QString);
    void requestHideSurface(QString);
    void backToHomeScreen();
    void backToPreviousScreen();
    uicommon::SysUI::TransitionRetCode callOutToExpand(const QString &app, const QString& screenId = QString(), uicommon::SysUI::TransitionType = uicommon::SysUI::TransitionType::ShowTransition);
    void callToExpandMaxsize(const QString &appId);
    void callToExpandMaxsize(const QString &appId, bool isFullExpand);
    void callToExpandMaxsize(const QString &appId, bool isFullExpand, int screenType);
    void callToExpandMaxsize(const QString &appId, bool isFullExpand, int screenType, bool enableHeader);
    void callToShowInternalPopup(const QString &appId);
    void callToShowInternalPopup(const QString &appId, bool isShowPopup);
    void callToShowTopScreen(const QString &appId);
    void callToShowTopScreen(const QString &appId, bool isShowTop);
    void changeDisplayOnOff();
    void changeScreenSize(const QString &Apps);
    void checkCurrentScreen();
    void collectApp(const QString &in0, const QString &in1, const QString &in2, const QString &in3, const QString &in4, const QString &in5, const QString &in6);
    void enableMultitouchSettingScreen(bool isEnable);
    void getAppIDForSignalReturnToTopScreen(const QString &appID);
    void getAppIdForHeader(const QString &appId);
    void getCurrentMeterType();
    void getDataThroughSys(const QString &in0, const QDBusVariant &var);
    void getErrorCodeForTest(const QString &appId, const QString &errorCode);
    void getFavoriteFromApps(const QString &appId, int eventId);
    void getNewDefaultBarApps(const QString &first, const QString &second, const QString &third, const QString &fourth, const QString &fifth);
    void getNewSettingInfo(const QString &first, const QString &second, const QString &third);
    void getPositionToTransfer(double x, double y, const QString &tempId);
    void getPositionToTransfer(double x, double y, const QString &tempId, bool dbClick);
    void getPositionToTransfer(double x, double y, const QString &tempId, bool dbClick, bool onlyAcceptRelease);
    QString getPreviousApplication();
    void getSettingTileAppId();
    void getSettingTileType();
    QString getTopMostSurfaceView();
    void gotoAndroidApp();
    bool isFullSizeSurfaceViewTheTop();
    bool isLeftDriverPosition();
    void manualDriverPicture();
    void manualDriverRecord();
    QString mediaType();
    void notifySettingChanged(const QString &str);
    void popupRequestShow(bool isShow);
    void rePositionWindowItem(const QString &SURFACE_ID, int x, int y);
    void rePositionWindownItemback(const QString &SURFACE_ID);
    void receiveAppToCallOut(const QString &appID, int screenID);
    void receivePhoneApp(const QString &appID, int screenID);
    void receiverForMediaType(const QString &type);
    void replyResultPopup(const QString &title, const QDBusVariant &data);
    void requestShowFullApp(const QString &in0);
    void requestToHome();
    void resizeWindowItem(const QString &SURFACE_ID, int width, int height);
    void sendDataThroughSys(const QString &in0, const QDBusVariant &var);
    void sendDatatoMedia(const QString &in0, const QString &in1);
    void setCloseScreen();
    void setappIdTiel(const QString &newAppIdTiel);
    void setchildAppActive(const QString &newChildAppActive);
    void setlayoutType(int newLayoutType);
    void settingTileAppId(const QString &appIdTiel);
    void showFactorySetting();
    void updateScreenSuccesfully();
    void requestAACPSurface(const uicommon::SysUI::ServiceAACP& serviceType, bool isShown, const bool& supportShowHeader = true);
Q_SIGNALS: // SIGNALS
    void onRequestHideApp(QString);
    void onRequestShowApp(QString);
    void addFavoriteToSystem(const QString &appId, int eventId);
    void appIDChanged();
    void appIdTielChanged();
    void backToHome(const QString &previousScreen);
    void backToPrevious();
    void callCameraForHeader(int in0);
    void callCommunicateSettingForHeader(int typeOfScreen);
    void callHDMIForHeader();
    void callScreensOfAGivenApp(const QString &appID, int screenNums);
    void callScreensOfPhoneApp(const QString &appID, int screenNums);
    void calledBackToPrevious();
    void cameraIsOnChanged();
    void childAppActiveChanged();
    void collectAllDataFromApp(const QString &first, const QString &second, const QString &third, const QString &fourth, const QString &fifth, const QString &first_id, const QString &second_id, const QString &third_id);
    void currentApplicationChanged();
    void currentMediaTypeChanged();
    void currentMeterTypeChanged();
    void currentPopupPathChanged();
    void currentScreenPathChanged();
    void defaultAppsChanged();
    void defaultBarAppsChanged();
    void defaultLayoutChanged();
    void disableWaitingScreen(bool in0);
    void expandScreen(const QString &in0);
    void fullExpandChanged(const QString &appId, bool isFullExpand, int screenType, int changeSate);
    void fullScreenDriverRecorder();
    void keyEvent(ushort key, int tempEvent);
    void layoutTypeChanged();
    void listPanelAppsChanged(const QString &in0);
    void mediaTypeChanged();
    void notifyListMeterChanged(const QString &in0);
    void notifyReplyResultPopup(const QString &title, const QDBusVariant &data);
    void onDriverPicture();
    void sigWheelEvent(int code);
    void onDriverRecord();
    void onHandleReqCallReceived(const QString &qstr);
    void onSetVolumeMinus();
    void onSetVolumeMute();
    void onSetVolumePlus();
    void popupRequestShowSignal(bool isShow);
    void propagatePosition(double x, double y, const QString &tempId, bool doubleClick, bool onlyAcceptRelease);
    void receivedUpdateScreenNotification();
    void sendAppIdToHeader(const QString &appId);
    void showInteralPopup(const QString &appId, bool isShowPopup);
    void showTestAppChanged();
    void showTopScreenOnApps(const QString &appId, bool isShowTop);
    void showUSBheaderChanged();
    void signalChangeScreenSize(const QString &Appid);
    void signalChangeScreens(const QString &tempId);
    void signalCloseScreenAndroidAuto();
    void signalEnableMultitouchSettingScreen(bool isEnable);
    void signalErrorCodeForTest(const QString &appId, const QString &errorCode);
    void signalGetSettingTielType();
    void signalGetSettingTileAppId();
    void signalReturnToTopScreen(const QString &appID);
    void signalSettingAppIdTile(const QString &appIdTiel);
    void signallingDataThroughApp(const QString &in0, const QDBusVariant &var);
    void signallingDataThroughSys(const QString &in0, const QDBusVariant &var);
    void signallingDataThroughSysOverflowText(const QString& appName, const bool& isActive);
    void signallingDataThroughSysRequestShowApp(const QString& appName);
    void usbInformation(const QString &in0, const QString &in1);
    void writeNewDefaultBarApps(const QString &first, const QString &second, const QString &third, const QString &fourth, const QString &fifth);
    void writeNewSettingInfo(const QString &first, const QString &second, const QString &third);
    void transitionStateTrigger(uicommon::SysUI::TransitionType type, const QString& app, const QString& eventID);
    void signalCheckPreset(int presetOrder);
    void onCameraSurfaceIsRunningChanged(bool isShown);
};

#endif
