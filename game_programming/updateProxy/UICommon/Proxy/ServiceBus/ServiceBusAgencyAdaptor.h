/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ACPAgency.xml -a ACPAgencyAdaptor -c ACPAgencyAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef SYSTEM_BUS_AGENCYADAPTOR_H
#define SYSTEM_BUS_AGENCYADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include <QtCore/qcontainerfwd.h>
#include "ServiceBusAgency.h"
#include <QByteArray>

namespace uicommon
{
    /*
     * Adaptor class for interface ese.hmi.servicebus
     */
    class ServiceBusAgencyAdaptor : public QDBusAbstractAdaptor
    {
        Q_OBJECT
        Q_CLASSINFO("D-Bus Interface", "ese.hmi.servicebus")
        Q_CLASSINFO("D-Bus Introspection", ""
                                           "  <interface name=\"ese.hmi.servicebus\">\n"
                                           "<method name=\"sendData\">\n"
                                            "      <arg direction=\"in\" type=\"a(y)\" name=\"data\"/>\n"
                                            "    </method>\n"
                                           "    <signal name=\"dataOnBus\">\n"
                                           "      <arg name=\"data\" direction=\"out\" type=\"a(y)\"/>\n"
                                           "    </signal>\n"
                                           "  </interface>\n"
                                           "")
    public:
        ServiceBusAgencyAdaptor(ServiceBusAgency *parent);
        inline ServiceBusAgency *parent() const
        {
            return static_cast<ServiceBusAgency *>(QObject::parent());
        }
        virtual ~ServiceBusAgencyAdaptor();

    public:         // PROPERTIES
    public Q_SLOTS: // METHODS
        void sendData(const QByteArray& data);

    Q_SIGNALS: // SIGNALS
        void dataOnBus(const QByteArray& data);
    };
}

#endif //SYSTEM_BUS_AGENCYADAPTOR_H
