/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -a ConnectedServiceAdaptor -c ConnectedServiceAdaptor -i ConnectedServiceAgency.h ConnectedServiceInf.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef CONNECTEDSERVICEADAPTOR_H
#define CONNECTEDSERVICEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "ConnectedServiceAgency.h"
#include "UICommon_global.h"
namespace uicommon {
    /*
    * Adaptor class for interface ese.hmi.csif
    */
    class UICOMMON_EXPORT ConnectedServiceAdaptor: public QDBusAbstractAdaptor
    {
        Q_OBJECT
        Q_CLASSINFO("D-Bus Interface", "ese.hmi.csif")
        Q_CLASSINFO("D-Bus Introspection", ""
    "  <interface name=\"ese.hmi.csif\">\n"
    "    <signal name=\"onConnectedChanged\">\n"
    "      <arg direction=\"out\" type=\"b\" name=\"_tele\"/>\n"
    "      <arg direction=\"out\" type=\"b\" name=\"_conSetFlag\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onDigitalKeySettingStatusChanged\">\n"
    "      <arg direction=\"out\" type=\"b\" name=\"value\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onNetworkResultChanged\">\n"
    "      <arg direction=\"out\" type=\"i\" name=\"networkResult\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onDCMWaveStatusChanged\">\n"
    "      <arg direction=\"out\" type=\"i\" name=\"dcmWaveStatus\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onDigitalKeyActiveStatusChanged\">\n"
    "      <arg direction=\"out\" type=\"b\" name=\"dcmWaveStatus\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onDigitalKeyResponseResult\">\n"
    "      <arg direction=\"out\" type=\"i\" name=\"digKeyRespRes\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onCompletedStartOpening\"/>\n"
    "    <signal name=\"onInforChanged\">\n"
    "      <arg direction=\"out\" type=\"s\" name=\"listConnectedInf\"/>\n"
    "    </signal>\n"
    "    <signal name=\"onConnectedListChanged\">\n"
    "      <arg direction=\"out\" type=\"s\" name=\"conInfList\"/>\n"
    "    </signal>\n"
    "    <signal name=\"wallpaperDownloadStatusChanged\">\n"
    "      <arg direction=\"out\" type=\"i\" name=\"wallDownStt\"/>\n"
    "    </signal>\n"
    "    <signal name=\"networkResultChanged\">\n"
    "      <arg direction=\"out\" type=\"i\" name=\"networkResult\"/>\n"
    "    </signal>\n"
    "    <method name=\"requestDeleteDigitalKey\"/>\n"
    "    <method name=\"requestGetDigitalKeySettingStatus\">\n"
    "      <arg direction=\"out\" type=\"b\"/>\n"
    "    </method>\n"
    "    <method name=\"requestSetDigitalKeySettingStatus\">\n"
    "      <arg direction=\"in\" type=\"b\" name=\"digKeySetStt\"/>\n"
    "    </method>\n"
    "    <method name=\"requestGetDigitalKeyActiveStatus\">\n"
    "      <arg direction=\"out\" type=\"b\"/>\n"
    "    </method>\n"
    "    <method name=\"requestSetDigitalKeyActiveStatus\">\n"
    "      <arg direction=\"in\" type=\"b\" namstatice=\"digKeySetActStt\"/>\n"
    "    </method>\n"
    "    <method name=\"requestStartCall\"/>\n"
    "    <method name=\"requestEndCall\"/>\n"
    "    <method name=\"requestResetNetwork\">\n"
    "      <arg direction=\"out\" type=\"i\"/>\n"
    "    </method>\n"
    "  </interface>\n"
            "")
    public:
        ConnectedServiceAdaptor(QObject *parent);
        virtual ~ConnectedServiceAdaptor();

    public: // PROPERTIES
    public Q_SLOTS: // METHODS
        void requestDeleteDigitalKey();
        void requestEndCall();
        bool requestGetDigitalKeyActiveStatus();
        bool requestGetDigitalKeySettingStatus();
        void requestResetNetwork();
        void requestSetDigitalKeySettingStatus(bool digKeySetStt);
        void requestStartCall();
    Q_SIGNALS: // SIGNALS
        void networkResultChanged(int networkResult);
        void onCompletedStartOpening();
        void onConnectedChanged(bool _tele, bool _conSetFlag);
        void onConnectedListChanged(const QString &conInfList);
        void onDCMWaveStatusChanged(int dcmWaveStatus);
        void onDigitalKeyActiveStatusChanged(bool dcmWaveStatus);
        void onDigitalKeyResponseResult(int digKeyRespRes);
        void onDigitalKeySettingStatusChanged(bool value);
        void onInforChanged(const QString &listConnectedInf);
        void onNetworkResultChanged(int networkResult);
        void wallpaperDownloadStatusChanged(int wallDownStt);
    };
}
#endif
