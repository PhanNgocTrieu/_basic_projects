/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp virtualassistantservice.xml -i virtualassistantservice.h -p VirtualAssistantProxy
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef VIRTUALASSISTANTPROXY_H
#define VIRTUALASSISTANTPROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "virtualassistantservice.h"

/*
 * Proxy class for interface ese.hmi.VirtualAssistantService
 */
class VirtualAssistantProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "ese.hmi.VirtualAssistantService"; }

public:
    VirtualAssistantProxy(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~VirtualAssistantProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> sendCommand(VAComand command, const QDBusVariant& data)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(command) << QVariant::fromValue(data);
        return asyncCallWithArgumentList(QStringLiteral("sendCommand"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace ese {
  namespace hmi {
    typedef ::VirtualAssistantProxy VirtualAssistantService;
  }
}
#endif
