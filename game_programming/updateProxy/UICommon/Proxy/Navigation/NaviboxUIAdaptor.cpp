/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp naviboxui.xml -i naviboxui.h -a NaviboxUIAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "NaviboxUIAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class NaviboxUIAdaptor
 */

NaviboxUIAdaptor::NaviboxUIAdaptor(QObject *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

NaviboxUIAdaptor::~NaviboxUIAdaptor()
{
    // destructor
}

void NaviboxUIAdaptor::changeMediaType(const QString &type)
{
    // handle method call ese.hmi.naviboxui.changeMediaType
    QMetaObject::invokeMethod(parent(), "changeMediaType", Q_ARG(QString, type));
}

void NaviboxUIAdaptor::notifyState(const QString &appid, NaviboxUIState state)
{
    // handle method call ese.hmi.naviboxui.notifyState
    QMetaObject::invokeMethod(parent(), "notifyState", Q_ARG(QString, appid), Q_ARG(NaviboxUIState, state));
}

void NaviboxUIAdaptor::requestTransition(const QString &appid)
{
    // handle method call ese.hmi.naviboxui.requestTransition
    QMetaObject::invokeMethod(parent(), "requestTransition", Q_ARG(QString, appid));
}

void NaviboxUIAdaptor::setCurrentApp(const QString &appid)
{
    // handle method call ese.hmi.naviboxui.setCurrentApp
    QMetaObject::invokeMethod(parent(), "setCurrentApp", Q_ARG(QString, appid));
}

