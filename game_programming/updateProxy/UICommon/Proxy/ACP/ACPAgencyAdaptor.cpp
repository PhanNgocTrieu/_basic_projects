/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp ACPAgency.xml -a ACPAgencyAdaptor -c ACPAgencyAdaptor
 *
 * qdbusxml2cpp is Copyright (C) 2022 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "ACPAgencyAdaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

namespace uicommon
{
    /*
     * Implementation of adaptor class ACPAgencyAdaptor
     */

    ACPAgencyAdaptor::ACPAgencyAdaptor(ACPAgency *parent)
        : QDBusAbstractAdaptor(parent)
    {
        // constructor
        setAutoRelaySignals(true);
    }

    ACPAgencyAdaptor::~ACPAgencyAdaptor()
    {
        // destructor
    }

    int ACPAgencyAdaptor::getBrightness()
    {
        // handle method call ese.hmi.acpagency.getBrightness
        return parent()->getBrightness();
    }

    int ACPAgencyAdaptor::getSessionState()
    {
        // handle method call ese.hmi.acpagency.getSessionState
        return parent()->getSessionState();
    }

    bool ACPAgencyAdaptor::setBrightness(int value)
    {
        // handle method call ese.hmi.acpagency.setBrightness
        return parent()->setBrightness(value);
    }

    bool ACPAgencyAdaptor::setOperationMode(int mode)
    {
        // handle method call ese.hmi.acpagency.setOperationMode
        return parent()->setOperationMode(mode);
    }

    bool ACPAgencyAdaptor::setSourceOn(bool value)
    {
        return parent()->setSourceOn(value);
    }

    bool ACPAgencyAdaptor::trackSongCommand(int value)
    {
        return parent()->trackSongCommand(value);
    }

    bool ACPAgencyAdaptor::previousSong()
    {
        return parent()->previousSong();
    }

    bool ACPAgencyAdaptor::nextSong()
    {
        return parent()->nextSong();
    }

    bool ACPAgencyAdaptor::ipodKeyRelease()
    {
        return parent()->ipodKeyRelease();
    }

    bool ACPAgencyAdaptor::enjectKeyEvent(int keyCode, int keyStatus)
    {
        return parent()->enjectKeyEvent(keyCode, keyStatus);
    }
    
    bool ACPAgencyAdaptor::switchApplication(int appId, int cpAppId ,bool isSessionEnd,bool isExitCam, QString phoneNum)
    {
        return parent()->switchApplication(appId,cpAppId,isSessionEnd,isExitCam,phoneNum);
    }

    bool ACPAgencyAdaptor::reqCarPlayImageQuality()
    {
        return parent()->reqCarPlayImageQuality();
    }
     
    bool ACPAgencyAdaptor::interruptArbitration(int type, bool normalSource, bool isEnter)
    {
        return parent()->interruptArbitration(type, normalSource, isEnter);
    }

    bool ACPAgencyAdaptor::setACPContrastStepValue(QString detail)
    {
        return parent()->setContrastStepValue(detail);
    }

    bool ACPAgencyAdaptor::setACPColorStepValue(QString detail)
    {
        return parent()->setColorStepValue(detail);
    }

    QString ACPAgencyAdaptor::getACPContrastStepValue()
    {
        return parent()->getContrastStepValue();
    }

    QString ACPAgencyAdaptor::getACPColorStepValue()
    {
        return parent()->getColorStepValue();
    }

    bool ACPAgencyAdaptor::setVAStatus(int status)
    {
        qWarning() << "---> ACPAgencyAdaptor::setVAStatus " << status;
        return parent()->setVAStatus(status);
    }

    int ACPAgencyAdaptor::getACPDayContrastValue()
    {
        return parent()->getDayContrastValue();
    }

    bool ACPAgencyAdaptor::setACPDayContrastValue(int value)
    {
        return parent()->setDayContrastValue(value);
    }

    int ACPAgencyAdaptor::getACPDayColorValue()
    {
        return parent()->getDayColorValue();
    }

    bool ACPAgencyAdaptor::setACPDayColorValue(int value)
    {
        return parent()->setDayColorValue(value);
    }

    int ACPAgencyAdaptor::getACPNightContrastValue()
    {
        return parent()->getNightContrastValue();
    }

    bool ACPAgencyAdaptor::setACPNightContrastValue(int value)
    {
        return parent()->setNightContrastValue(value);
    }

    int ACPAgencyAdaptor::getACPNightColorValue()
    {
        return parent()->getNightColorValue();
    }

    bool ACPAgencyAdaptor::setACPNightColorValue(int value)
    {
        return parent()->setNightColorValue(value);
    }
}
